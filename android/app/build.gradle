apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//  We will follow (Major).(Minor).(Release).(Build)  numbering system where:
def versionPropsFile = file('version.properties')
def appMajor
def appMinor
def appRelease
def appBuild

/*Setting default value for versionBuild which is the last incremented value stored in the file */
if (versionPropsFile.canRead()) {
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    appMajor = versionProps['VERSION_MAJOR'].toInteger()
    appMinor = versionProps['VERSION_MINOR'].toInteger()
    appRelease = versionProps['VERSION_RELEASE'].toInteger()
    appBuild = versionProps['VERSION_BUILD'].toInteger()
} else {
    throw new FileNotFoundException("Could not read version.properties!")
}

// In Android version name "1.1.3.1" will be corresponding to version code="1013001"
// So the maximum numbers for major, minor, release and build will be as follows 2099.99.9.999
def appVersionCode = ("${appMajor}".toInteger() * 1000000) + ("${appMinor}".toInteger() * 10000) + ("${appRelease}".toInteger() * 1000) + "${appBuild}".toInteger()
def appVersionName = "${appMajor}.${appMinor}.${appRelease}.${appBuild}"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.example.stackexchangeapp"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode "${appVersionCode}".toInteger()
        versionName "${appVersionName}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    ext.koin_version = '2.1.5'
    ext.retrofitVersion = "2.6.0"
    ext.glideVersion = "4.11.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.2.0-alpha06'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // LiveData & ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    //https://github.com/InsertKoinIO/koin
    // Koin for Android
    implementation "org.koin:koin-android:$koin_version"
    // Koin Android ViewModel feature
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    //https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    //https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //http://square.github.io/retrofit/
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    //https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    //https://github.com/bumptech/glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    testImplementation 'junit:junit:4.13'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.mockito:mockito-core:3.3.3'
    //https://github.com/andrzejchm/RESTMock
    testImplementation "com.github.andrzejchm.RESTMock:android:0.4.2"
    androidTestImplementation "org.mockito:mockito-android:3.3.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    // Koin for tests
    androidTestImplementation("org.koin:koin-test:2.0.1") { exclude group: 'org.mockito' }
}
